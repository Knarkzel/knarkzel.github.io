#+TITLE: Implementing opcodes

After we have set up the screen, it's time to implement [[https://github.com/mattmikolay/chip-8/wiki/CHIP%E2%80%908-Instruction-Set][all
the opcodes]] that CHIP-8 uses. It's also necessary to set up [[https://github.com/mattmikolay/chip-8/wiki/CHIP%E2%80%908-Technical-Reference][registers
and memory]], which we'll be doing whenever needed. We will be using the
[[./chip8-test-suite.ch8][chip8-test-suite]] ROM to aid us in implementing
the opcodes. When emulating each opcode, we read two bytes at a time. Then
we use pattern matching to see which opcode it is and execute some code.

In this article, we'll implement following opcodes:

| Instruction | Description                                                                                                                                                             |
|-------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| 00E0        | Clear the screen                                                                                                                                                        |
| 6XNN        | Store number NN in register VX                                                                                                                                          |
| ANNN        | Store memory address NNN in register I                                                                                                                                  |
| DXYN        | Draw a sprite at position VX, VY with N bytes of sprite data starting at the address stored in I. Set VF to 01 if any set pixels are changed to unset, and 00 otherwise |

#+BEGIN_EXPORT html
<pre>
os
├── src
│   ├── <a href="./chip8/src/Emulator.zig">Emulator.zig</a>
│   ├── <a href="./chip8/src/main.zig">main.zig</a>
│   └── <a href="./chip8/src/Terminal.zig">Terminal.zig</a>
└── <a href="./chip8/build.zig">build.zig</a>
</pre>
#+END_EXPORT
